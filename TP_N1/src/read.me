--> Ejercicio 1
Un TAD es un tipo abstracto de datos, es un tipo de dato inependiente
con sus propias propiedades y operaciones definidas por un especificacion

--> Ejercicio 2
El encapsulamiento sucede en la orientacion programacion orientada a objetos(POO), y es la capacidad de ocultar(encapsular)
los datos de un objeto(ya sean atributtos, metodos, etc)

--> Ejercicio 3
los procedimientos, metodos y funciones, todas son usadas con un proposito especifico y en su mayoria para tareas que se
repiten varias veces, por otro lado, las funciones a diferencia de los metodos y procedimientos, necesita devolver un valor,
un procedimiento y metodo no necesitan, necesariamente, devolver un valor, por otro lado, los metodos a diferencia de los otros
dos, es en escencia una funcion pero a diferencia de estas, los metodos estan relacionados a una clase de objeto especifica.

--> Ejercicio 4
UML, es un lenguaje de modelo unificado para el modelado de sistemas de software(estructura, comportamiento, etcetc)
y se representa la clase en un rectangulo, en la parte superior su nombre, en el medio sus atributos y por debajo los metodos
-->Ejercicio 5
* "Primera letra en mayuscula" --> solo se aplica a las clases(aunque se puede escribir en minuscula, por convencion no se hace)
* "Primera letra en minuscula" --> solo se aplica a atributos(y metodos)
* "Final" --> se aplica a clases, atributos y metodos
* "Static" --> se aplica a clases, atributos y metodos
* "Public" --> se aplica a clases, atributos y metodos
* "Private" --> se aplica a clases, atributos y metodos
-->Ejercicio 6
-------Un constructor…
o Es el método principal para ejecutar un programa. --> **Falso**
o Crea instancias. --> **Verdadero**
o Devuelve el valor de un atributo privado. --> **Falso**
o Tiene sentencia return. --> **Falso**
o Siempre existe uno por defecto, sin parámetros ni inicializaciones de atributos. --> **Verdadero**
o Se puede sobreescribir. --> **Verdadero**
o Se puede sobrecargar. --> **Verdadero**
o Su nombre se escribe con mayúscula. --> **Falso**
o Su calificador de acceso es static. --> **Falso**
o Su tipo de devolución no se indica y corresponde a la clase. --> **Verdadero**
------- Un método…
o Puede tener múltiples parámetros con el mismo nombre, siempre y cuando tengan tipos
diferentes. --> **Falso
o Puede sobrecargarse. --> **Verdadero**
o Puede sobreescribirse. --> **Verdadero**
o Puede ser static. --> **Verdadero**
o Puede ser tanto public como protected, pero no private. --> **Falso**
o Un método puede tener un modificador de acceso final. --> **Verdadero**
-->Ejercicio 7
a- Se necesita que cualquiera pueda acceder al color de un vehículo. Entonces, declaro color como:
-->Public<--
b- Se necesita que color se pueda acceder a través no sólo de vehículo, sí no ahora también de
Buses, y como todos sabemos un bus es un tipo de vehículo, entonces también deberá tener
acceso a color. Entonces, declaro color como: --> un atributo protegido <--
a- Se necesita que color se pueda acceder solamente para vehículo. Entonces, declaro color como: un atributo privado
